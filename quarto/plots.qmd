---
title: Plots
date: today

format:
    html: default

code-fold: true
wrap: auto
embed-resources: true
warning: false
error: false
---


Gr√°ficos:   
- diferencias entre **same-category** vs **diff-category** (across inflection and derivation)  
- entre **diferentes frecuencias relevantes** (type and/or token frequency of occurrence)  

## Derivation similarity by category.

```{r}
#| echo: false
# set working directory
# print(getwd())
# setwd("C:/PythonCode/TFM_GLS/")
# print(getwd())
```

```{r}
#| warning: false
#| echo: false
library(ggplot2)
library(dplyr)

# FASTTEXT
# INFLECTION
spa_ft_inf <- read.csv("C:/PythonCode/TFM_GLS/py/results/spa/spa_fasttext_inflection_results.csv")
pol_ft_inf <- read.csv("C:/PythonCode/TFM_GLS/py/results/pol/pol_fasttext_inflection_results.csv")
# DERIVATION
spa_ft_der <- read.csv("C:/PythonCode/TFM_GLS/py/results/spa/spa_fasttext_derivation_results.csv")
pol_ft_der <- read.csv("C:/PythonCode/TFM_GLS/py/results/pol/pol_fasttext_derivation_results.csv")

# WORD2VEC
# INFLECTION
spa_w2v_inf <- read.csv("C:/PythonCode/TFM_GLS/py/results/spa/spa_word2vec_inflection_results.csv")
pol_w2v_inf <- read.csv("C:/PythonCode/TFM_GLS/py/results/pol/pol_word2vec_inflection_results.csv")
# DERIVATION
spa_w2v_der <- read.csv("C:/PythonCode/TFM_GLS/py/results/spa/spa_word2vec_derivation_results.csv")
pol_w2v_der <- read.csv("C:/PythonCode/TFM_GLS/py/results/pol/pol_word2vec_derivation_results.csv")

# BERT
# INFLECTION
spa_bert_inf <- read.csv("C:/PythonCode/TFM_GLS/py/results/spa/spa_bert_inflection_results.csv")
pol_bert_inf <- read.csv("C:/PythonCode/TFM_GLS/py/results/pol/pol_bert_inflection_results.csv")
# DERIVATION
spa_bert_der <- read.csv("C:/PythonCode/TFM_GLS/py/results/spa/spa_bert_derivation_results.csv")
pol_bert_der <- read.csv("C:/PythonCode/TFM_GLS/py/results/pol/pol_bert_derivation_results.csv")

# adding model, language and type (inf or der) to the dataset in order to plot it
spa_ft_inf <- spa_ft_inf %>%
  mutate(model = "FastText", language = "Spanish", type = "Inflection", category = "V:V")

pol_ft_inf <- pol_ft_inf %>%
  mutate(model = "FastText", language = "Polish", type = "Inflection", category = "V:V")

spa_ft_der <- spa_ft_der %>%
  mutate(model = "FastText", language = "Spanish", type = "Derivation")

pol_ft_der <- pol_ft_der %>%
  mutate(model = "FastText", language = "Polish", type = "Derivation")

spa_w2v_inf <- spa_w2v_inf %>%
  mutate(model = "Word2Vec", language = "Spanish", type = "Inflection", category = "V:V")

pol_w2v_inf <- pol_w2v_inf %>%
  mutate(model = "Word2Vec", language = "Polish", type = "Inflection", category = "V:V")

spa_w2v_der <- spa_w2v_der %>%
  mutate(model = "Word2Vec", language = "Spanish", type = "Derivation")

pol_w2v_der <- pol_w2v_der %>%
  mutate(model = "Word2Vec", language = "Polish", type = "Derivation")

spa_bert_inf <- spa_bert_inf %>%
  mutate(model = "Multilingual BERT", language = "Spanish", type = "Inflection", category = "V:V")

pol_bert_inf <- pol_bert_inf %>%
  mutate(model = "Multilingual BERT", language = "Polish", type = "Inflection", category = "V:V")

spa_bert_der <- spa_bert_der %>%
  mutate(model = "Multilingual BERT", language = "Spanish", type = "Derivation")

pol_bert_der <- pol_bert_der %>%
  mutate(model = "Multilingual BERT", language = "Polish", type = "Derivation")

```

```{r}
#| column: body
#| fig-format: svg
#| out-width: 100%
# first plot
all_derivation <- bind_rows(spa_ft_der, pol_ft_der, spa_w2v_der, 
pol_w2v_der, spa_bert_der, pol_bert_der)

mean_by_category <- all_derivation %>%
  group_by(category, model, language) %>%
  summarise(mean_similarity = mean(similarity, na.rm = TRUE), .groups = 'drop')

ggplot(mean_by_category, aes(x = category, y = mean_similarity, 
color = model, shape = language)) +
  geom_point(size = 2, position = position_dodge(width = 0.5), na.rm = TRUE) +
  labs(x = "Category", y = "Mean similarity", 
  color = "Embeddings model", shape = "Language") +
  theme_light() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Derivation and inflection similarity by category.

```{r}
#| warning: false
#| fig-format: svg
#| column: body
#| out-width: 100%
# second plot

# second plot
all_data <- bind_rows(spa_ft_inf, pol_ft_inf, spa_ft_der, pol_ft_der, spa_w2v_inf, pol_w2v_inf, spa_w2v_der, pol_w2v_der, spa_bert_inf, pol_bert_inf, spa_bert_der, pol_bert_der)

mean_by_category <- all_data %>%
  group_by(category, model, language, type) %>%
  summarise(mean_similarity = mean(similarity, na.rm = TRUE), .groups = 'drop')

mean_by_category <- mean_by_category %>%
  mutate(category_group = ifelse(gsub(":.*", "", category) == gsub(".*:", "", category), "Same category", "Different category"))

ggplot(mean_by_category, aes(x = category, y = mean_similarity, color = model, shape = language)) +
  geom_point(size = 2, position = position_dodge(width = 0.5), na.rm = TRUE) +
  labs(x = "Category", y = "Mean Similarity", color = "Embeddings model", shape = "Language") +
  facet_wrap(~category_group, scales="free_x") +
  scale_x_discrete(drop = TRUE) +
  theme_light() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


```